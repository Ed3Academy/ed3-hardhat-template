/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { BigNumberish, Contract, ContractFactory, Overrides, Signer, utils } from "ethers";

import type { PromiseOrValue } from "../../common";
import type { Ed3AirlineGateV0, Ed3AirlineGateV0Interface } from "../../contracts/Ed3AirlineGateV0";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_ticketPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalSupply",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_ed3LoyaltyPoints",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_pointsPerTicket",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "ONE_TICKET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POINTS_PER_TICKET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ed3LoyaltyPoints",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ticketLeft",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ticketPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ticketTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userTickets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162000edf38038062000edf833981810160405281019062000037919062000271565b620000576200004b6200010060201b60201c565b6200010860201b60201c565b83600281905550826003819055508260018190555081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806080818152505033600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050620002e3565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b6000819050919050565b620001e681620001d1565b8114620001f257600080fd5b50565b6000815190506200020681620001db565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000239826200020c565b9050919050565b6200024b816200022c565b81146200025757600080fd5b50565b6000815190506200026b8162000240565b92915050565b600080600080608085870312156200028e576200028d620001cc565b5b60006200029e87828801620001f5565b9450506020620002b187828801620001f5565b9350506040620002c4878288016200025a565b9250506060620002d787828801620001f5565b91505092959194509250565b608051610bd962000306600039600081816104ba01526105670152610bd96000f3fe6080604052600436106100a75760003560e01c8063768b8b9411610064578063768b8b941461017757806380017f4e146101a25780638da5cb5b146101df578063d5cf0d431461020a578063ea33974314610235578063f2fde38b14610260576100a7565b80631209b1f6146100ac5780633ccfd60b146100d75780635910696c146100ee5780636a627842146101195780636e94da8414610135578063715018a614610160575b600080fd5b3480156100b857600080fd5b506100c1610289565b6040516100ce91906107bb565b60405180910390f35b3480156100e357600080fd5b506100ec61028f565b005b3480156100fa57600080fd5b50610103610345565b60405161011091906107bb565b60405180910390f35b610133600480360381019061012e9190610839565b61034b565b005b34801561014157600080fd5b5061014a61052b565b6040516101579190610875565b60405180910390f35b34801561016c57600080fd5b50610175610551565b005b34801561018357600080fd5b5061018c610565565b60405161019991906107bb565b60405180910390f35b3480156101ae57600080fd5b506101c960048036038101906101c49190610839565b610589565b6040516101d691906107bb565b60405180910390f35b3480156101eb57600080fd5b506101f46105a1565b6040516102019190610875565b60405180910390f35b34801561021657600080fd5b5061021f6105ca565b60405161022c91906107bb565b60405180910390f35b34801561024157600080fd5b5061024a6105cf565b60405161025791906107bb565b60405180910390f35b34801561026c57600080fd5b5061028760048036038101906102829190610839565b6105d5565b005b60025481565b610297610658565b600047116102da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d1906108ed565b60405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610342573d6000803e3d6000fd5b50565b60015481565b600254341015610390576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038790610959565b60405180910390fd5b6001600354116103d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103cc906109c5565b60405180910390fd5b60016003546103e49190610a14565b6003819055506001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104369190610a48565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f19827f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b81526004016104f6929190610a7c565b600060405180830381600087803b15801561051057600080fd5b505af1158015610524573d6000803e3d6000fd5b5050505050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610559610658565b61056360006106d6565b565b7f000000000000000000000000000000000000000000000000000000000000000081565b60066020528060005260406000206000915090505481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600181565b60035481565b6105dd610658565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361064c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064390610b17565b60405180910390fd5b610655816106d6565b50565b61066061079a565b73ffffffffffffffffffffffffffffffffffffffff1661067e6105a1565b73ffffffffffffffffffffffffffffffffffffffff16146106d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106cb90610b83565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000819050919050565b6107b5816107a2565b82525050565b60006020820190506107d060008301846107ac565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610806826107db565b9050919050565b610816816107fb565b811461082157600080fd5b50565b6000813590506108338161080d565b92915050565b60006020828403121561084f5761084e6107d6565b5b600061085d84828501610824565b91505092915050565b61086f816107fb565b82525050565b600060208201905061088a6000830184610866565b92915050565b600082825260208201905092915050565b7f4e6f2066756e647320746f207769746864726177000000000000000000000000600082015250565b60006108d7601483610890565b91506108e2826108a1565b602082019050919050565b60006020820190508181036000830152610906816108ca565b9050919050565b7f496e73756666696369656e742066756e64730000000000000000000000000000600082015250565b6000610943601283610890565b915061094e8261090d565b602082019050919050565b6000602082019050818103600083015261097281610936565b9050919050565b7f616972207469636b657420736f6c64206f757400000000000000000000000000600082015250565b60006109af601383610890565b91506109ba82610979565b602082019050919050565b600060208201905081810360008301526109de816109a2565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a1f826107a2565b9150610a2a836107a2565b9250828203905081811115610a4257610a416109e5565b5b92915050565b6000610a53826107a2565b9150610a5e836107a2565b9250828201905080821115610a7657610a756109e5565b5b92915050565b6000604082019050610a916000830185610866565b610a9e60208301846107ac565b9392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610b01602683610890565b9150610b0c82610aa5565b604082019050919050565b60006020820190508181036000830152610b3081610af4565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610b6d602083610890565b9150610b7882610b37565b602082019050919050565b60006020820190508181036000830152610b9c81610b60565b905091905056fea264697066735822122078bdd78eb900447340ac665a5db810c06debbbecfc911b7f87bc18738f7d624c64736f6c63430008110033";

type Ed3AirlineGateV0ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: Ed3AirlineGateV0ConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class Ed3AirlineGateV0__factory extends ContractFactory {
  constructor(...args: Ed3AirlineGateV0ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _ticketPrice: PromiseOrValue<BigNumberish>,
    _totalSupply: PromiseOrValue<BigNumberish>,
    _ed3LoyaltyPoints: PromiseOrValue<string>,
    _pointsPerTicket: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<Ed3AirlineGateV0> {
    return super.deploy(
      _ticketPrice,
      _totalSupply,
      _ed3LoyaltyPoints,
      _pointsPerTicket,
      overrides || {},
    ) as Promise<Ed3AirlineGateV0>;
  }
  override getDeployTransaction(
    _ticketPrice: PromiseOrValue<BigNumberish>,
    _totalSupply: PromiseOrValue<BigNumberish>,
    _ed3LoyaltyPoints: PromiseOrValue<string>,
    _pointsPerTicket: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_ticketPrice, _totalSupply, _ed3LoyaltyPoints, _pointsPerTicket, overrides || {});
  }
  override attach(address: string): Ed3AirlineGateV0 {
    return super.attach(address) as Ed3AirlineGateV0;
  }
  override connect(signer: Signer): Ed3AirlineGateV0__factory {
    return super.connect(signer) as Ed3AirlineGateV0__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Ed3AirlineGateV0Interface {
    return new utils.Interface(_abi) as Ed3AirlineGateV0Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Ed3AirlineGateV0 {
    return new Contract(address, _abi, signerOrProvider) as Ed3AirlineGateV0;
  }
}
